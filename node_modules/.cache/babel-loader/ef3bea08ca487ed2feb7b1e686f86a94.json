{"ast":null,"code":"import axios from 'axios';\nconst request = axios.create({\n  baseURL: '/api',\n  // 注意！！ 这里是全局统一加上了 '/api' 前缀，也就是说所有接口都会加上'/api'前缀在，页面里面写接口的时候就不要加 '/api'了，否则会出现2个'/api'，类似 '/api/api/user'这样的报错，切记！！！\n  timeout: 999999\n}); // request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8'; // config.headers['token'] = user.token;  // 设置请求头\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // response 拦截器\n// 可以在接口响应后统一处理结果\n\nrequest.interceptors.response.use(response => {\n  let res = response.data;\n  console.log(res); // 如果是返回的文件\n\n  if (response.config.responseType === 'blob') {\n    return res;\n  } // 兼容服务端返回的字符串数据\n\n\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n\n  return res;\n}, error => {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n}); // 添加请求拦截器，在请求头中加token\n\naxios.interceptors.request.use(config => {\n  if (localStorage.getItem('Authorization')) {\n    config.headers.Authorization = localStorage.getItem('Authorization');\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // localStorage.removeItem('Authorization');\n// this.$router.push('/login');\n\nexport default request;","map":{"version":3,"names":["axios","request","create","baseURL","timeout","interceptors","use","config","headers","error","Promise","reject","response","res","data","console","log","responseType","JSON","parse","localStorage","getItem","Authorization"],"sources":["/Users/linduoying/Downloads/learningVue/veterinary-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\n\nconst request = axios.create({\n\tbaseURL: '/api',  // 注意！！ 这里是全局统一加上了 '/api' 前缀，也就是说所有接口都会加上'/api'前缀在，页面里面写接口的时候就不要加 '/api'了，否则会出现2个'/api'，类似 '/api/api/user'这样的报错，切记！！！\n    timeout: 999999\n})\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  \n // config.headers['token'] = user.token;  // 设置请求头\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(\n    response => {\n        \n        let res = response.data;\n        console.log(res)\n        // 如果是返回的文件\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // 兼容服务端返回的字符串数据\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n// 添加请求拦截器，在请求头中加token\naxios.interceptors.request.use(\n    config => {\n      if (localStorage.getItem('Authorization')) {\n        config.headers.Authorization = localStorage.getItem('Authorization');\n      }\n   \n      return config;\n    },\n    error => {\n      return Promise.reject(error);\n    });\n\n    // localStorage.removeItem('Authorization');\n    // this.$router.push('/login');\n\nexport default request\n\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAE,MADmB;EACV;EACfC,OAAO,EAAE;AAFgB,CAAb,CAAhB,C,CAKA;AACA;AACA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiCC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC,CADuC,CAG1C;;EACG,OAAOD,MAAP;AACH,CALD,EAKGE,KAAK,IAAI;EACR,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD,E,CASA;AACA;;AACAR,OAAO,CAACI,YAAR,CAAqBO,QAArB,CAA8BN,GAA9B,CACIM,QAAQ,IAAI;EAER,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;EACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAHQ,CAIR;;EACA,IAAID,QAAQ,CAACL,MAAT,CAAgBU,YAAhB,KAAiC,MAArC,EAA6C;IACzC,OAAOJ,GAAP;EACH,CAPO,CAQR;;;EACA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzBA,GAAG,GAAGA,GAAG,GAAGK,IAAI,CAACC,KAAL,CAAWN,GAAX,CAAH,GAAqBA,GAA9B;EACH;;EACD,OAAOA,GAAP;AACH,CAdL,EAeIJ,KAAK,IAAI;EACLM,OAAO,CAACC,GAAR,CAAY,QAAQP,KAApB,EADK,CACsB;;EAC3B,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAlBL,E,CAqBA;;AACAT,KAAK,CAACK,YAAN,CAAmBJ,OAAnB,CAA2BK,GAA3B,CACIC,MAAM,IAAI;EACR,IAAIa,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAJ,EAA2C;IACzCd,MAAM,CAACC,OAAP,CAAec,aAAf,GAA+BF,YAAY,CAACC,OAAb,CAAqB,eAArB,CAA/B;EACD;;EAED,OAAOd,MAAP;AACD,CAPL,EAQIE,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVL,E,CAYI;AACA;;AAEJ,eAAeR,OAAf"},"metadata":{},"sourceType":"module"}