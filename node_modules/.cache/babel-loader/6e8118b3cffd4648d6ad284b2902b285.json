{"ast":null,"code":"export default {\n  name: 'searchResult',\n\n  data() {\n    a: $route.params.searchContent;\n\n    return {\n      searchForm: {\n        searchContent: ''\n      },\n      searchResults: []\n    };\n  },\n\n  methods: {\n    search() {\n      this.$axios.post('/result', {// 把 search 页面的 input 内容映射到 searchContent 变量中并发送给后端\n        // searchContent: $route.params.searchContent// 通过 v-model 把 input 框输入的内容存进 searchContent 中\n      }) // .then意思是指定回调函数\n      .then(successResponse => {\n        // successResponse.data[0].title：就是符合条件的搜索结果的标题。其他以此类推\n        // console.log(successResponse.data[0].title)\n        console.log(successResponse.data[0].imgURL); // 数组，所有符合条件的结果数组\n        // console.log(successResponse.data[0])  // 数组第一个，里面包含id title abstracts\n\n        let list = successResponse.data;\n        this.searchResults = list;\n\n        if (successResponse.data.length === 0) {\n          alert('error');\n        }\n      }) // 指定发生错误时的回调函数\n      .catch(failResponse => {\n        console.log(failResponse);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyCA;EACAA,oBADA;;EAEAC;IACAC;;IACA;MACAC;QAEAC;MAFA,CADA;MAKAC;IALA;EAOA,CAXA;;EAYAC;IACAC;MACA,YACAC,IADA,CACA,SADA,EACA,CACA;QACA;MAFA,CADA,EAKA;MALA,CAMAC,IANA,CAMAC;QACA;QACA;QACAC,4CAHA,CAGA;QACA;;QACA;QACA;;QACA;UACAC;QACA;MACA,CAhBA,EAiBA;MAjBA,CAkBAC,KAlBA,CAkBAC;QACAH;MACA,CApBA;IAqBA;;EAvBA;AAZA","names":["name","data","a","searchForm","searchContent","searchResults","methods","search","post","then","successResponse","console","alert","catch","failResponse"],"sourceRoot":"src/components","sources":["SearchResult.vue"],"sourcesContent":["<template>\n  <div class=\"Box\">\n\t<div>以下是与{{$route.params.searchContent}}相关搜索结果</div>\n{{searchContent}}\n\t<ul class=\"results\">\n        <li\n          class=\"result-content\"\n          v-for=\"searchResult in searchResults\"\n          :key=\"searchResult.id\"\n        >\n          <h3>\n            <a href=\"javascript:;\">{{ searchResult.title }}</a>\n          </h3>\n          <!-- 如果返回的图片地址不为空，有图片盒子，文字盒子样式为des-text1 -->\n          <div class=\"description\" v-if=\"searchResult.imgURL !== null\">\n            <div class=\"image\">\n              <a href=\"javascript:;\">\n                <!-- 给img的src绑定数据要用v-bind -->\n                <img :src='searchResult.imgURL' />\n              </a>\n            </div>\n            <div class=\"des-text1\">\n              {{ searchResult.abstracts }}\n            </div>\n          </div>\n          <!-- 如果返回的图片地址为空，没有图片盒子，文字盒子样式为des-text2 -->\n          <div class=\"description\" v-else>\n            <div class=\"des-text2\">\n              {{ searchResult.abstracts }}\n            </div>\n          </div>\n        </li>\n      </ul>\n\t<div><button>上一页</button>\n\t<button>下一页</button>\n\t</div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'searchResult',\n  data () {\n    a: $route.params.searchContent\n    return {\n      searchForm: {\n        \n        searchContent: ''\n      },\n      searchResults: []\n    }\n  },\n  methods: {\n      search () {\n        this.$axios\n          .post('/result', {\n            // 把 search 页面的 input 内容映射到 searchContent 变量中并发送给后端\n            // searchContent: $route.params.searchContent// 通过 v-model 把 input 框输入的内容存进 searchContent 中\n          })\n          // .then意思是指定回调函数\n          .then((successResponse) => {\n            // successResponse.data[0].title：就是符合条件的搜索结果的标题。其他以此类推\n            // console.log(successResponse.data[0].title)\n            console.log(successResponse.data[0].imgURL) // 数组，所有符合条件的结果数组\n            // console.log(successResponse.data[0])  // 数组第一个，里面包含id title abstracts\n            let list = successResponse.data\n            this.searchResults = list\n            if (successResponse.data.length === 0) {\n              alert('error')\n            }\n          })\n          // 指定发生错误时的回调函数\n          .catch((failResponse) => {\n            console.log(failResponse)\n          })\n      }\n  }\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}